# Generated by Django 4.0 on 2023-11-03 17:11

import django.contrib.auth.password_validation
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone_no', models.CharField(error_messages={'unique': 'A user with that phone number already exists.'}, help_text='Required. Enter a valid phone number.', max_length=10, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,10}$', 'Enter a valid phone number. It should contain only digits and an optional "+" at the beginning.')], verbose_name='phone number')),
                ('password', models.CharField(blank=True, max_length=128, null=True, validators=[django.contrib.auth.password_validation.validate_password], verbose_name='password')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='Last name')),
                ('dob', models.DateTimeField(verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], max_length=10)),
                ('type', models.CharField(choices=[('Customer', 'Customer'), ('Admin', 'Admin')], max_length=10, verbose_name='User Type')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.  Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'user',
                'ordering': ['date_joined'],
                'permissions': (),
                'swappable': 'AUTH_USER_MODEL',
            },
        ),
    ]
